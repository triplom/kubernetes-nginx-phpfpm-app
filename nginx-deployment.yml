apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
    layer: frontend
    environment: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        layer: frontend
        environment: dev
    spec:
      initContainers:
      - name: init-create-dir
        image: alpine:latest
        command: ['sh', '-c', 'mkdir -p /var/website']
        volumeMounts:
        - mountPath: /var/website
          name: contents
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "0.25"
            memory: "256Mi"
          limits:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - mountPath: /var/www/html/
          name: contents
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        securityContext:
          runAsUser: 1000
          runAsGroup: 3000
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
      volumes:
      - name: contents
        hostPath:
          path: /var/website
          type: DirectoryOrCreate
      - name: nginx-config
        configMap:
          name: nginx
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 2000